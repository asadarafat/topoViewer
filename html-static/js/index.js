var e,n,t,o,a=!1,r=!1,s=!1,i=!1;function l(e){const n=document.querySelector(e);if(!n)return console.error(`Checkbox not found for selector: ${e}`),null;const t=n.checked;return console.log(`${e}:`),console.log(t),t}function d(e,n){const t=document.getElementById(e);if(!t)return void console.error(`Container with ID ${e} not found.`);const o=(new DOMParser).parseFromString('\n\t\t<svg width="110" height="25" viewBox="0 0 170 40" fill="none" xmlns="http://www.w3.org/2000/svg">\n\t\t\t<path d="M117.514 1.21646L117.514 38.7835H123.148L123.148 1.21646H117.514ZM57.3221 0.57473C46.3463 0.574681 37.8303 8.56332 37.8303 20C37.8303 31.9517 46.3463 39.4255 57.3221 39.4253C68.2979 39.4251 76.8314 31.9517 76.8139 20C76.798 9.16418 68.2979 0.574779 57.3221 0.57473ZM71.1901 20C71.1901 28.4666 64.9812 34.0774 57.3221 34.0774C49.663 34.0774 43.4541 28.4666 43.4541 20C43.4541 11.687 49.663 5.92265 57.3221 5.92265C64.9812 5.92265 71.1901 11.687 71.1901 20ZM0 3.39001e-06V38.7835H5.74992L5.74992 13.1531L35.6298 40V31.9591L0 3.39001e-06ZM81.0513 20L101.961 38.7836H110.345L89.4038 20L110.345 1.21644H101.961L81.0513 20ZM170 38.7835H163.802L159.27 30.4644H138.742L134.209 38.7835H128.011L135.517 24.9176H156.322L145.948 5.64789L149.006 0L149.006 3.76291e-05L149.006 0L170 38.7835Z" fill="#005AFF"/>\n\t\t</svg>\n\t',"image/svg+xml").documentElement;o.querySelector("path").setAttribute("fill",n),t.innerHTML="",t.appendChild(o)}function c(e){const n=document.getElementById("notificationTextarea"),t=(new Date).toLocaleString();n.value+=`[${t}] ${e}\n`,n.scrollTop=n.scrollHeight}async function p(e,n,o,a){const r="panel-link-action-dropdown-menu-dropdown-content",s=(e,o)=>{console.log(`Clicked on: ${o}`),async function(e,n,o,a){console.log("linkWireshark - globalSelectedEdge: ",t),console.log("linkWireshark - option: ",n),console.log("linkWireshark - endpoint: ",o),console.log("linkWireshark - referenceElementAfterId: ",a);var r=t;try{environments=await getEnvironments(e),console.log("linkWireshark - environments: ",environments);var s=environments["deployment-type"];if(cytoTopologyJson=environments.EnvCyTopoJsonBytes,edgeData=findCytoElementById(cytoTopologyJson,r),console.log("linkWireshark- edgeData: ",edgeData),console.log("linkWireshark- edgeSource: ",edgeData.data.source),clabUser=edgeData.data.extraData.clabServerUsername,clabServerAddress=environments["clab-server-address"],clabSourceLongName=edgeData.data.extraData.clabSourceLongName,clabSourcePort=edgeData.data.extraData.clabSourcePort,clabTargetLongName=edgeData.data.extraData.clabTargetLongName,clabTargetPort=edgeData.data.extraData.clabTargetPort,"app"==n)"source"==o?(wiresharkHref=`clab-capture://${clabUser}@${clabServerAddress}?${clabSourceLongName}?${clabSourcePort}`,console.log("linkWireshark- wiresharkHref: ",wiresharkHref)):"target"==o&&(wiresharkHref=`clab-capture://${clabUser}@${clabServerAddress}?${clabTargetLongName}?${clabTargetPort}`,console.log("linkWireshark- wiresharkHref: ",wiresharkHref)),window.open(wiresharkHref);else if("edgeSharkInterface"==n)"source"==o?(baseUrl=`packetflix:ws://${clabServerAddress}:5001/capture?`,netNsResponse=await sendRequestToEndpointGetV3("/clab-node-network-namespace",argsList=[clabSourceLongName]),console.log("linkWireshark - netNsSource: ",netNsResponse.namespace_id.slice(netNsResponse.namespace_id.indexOf("[")+1,netNsResponse.namespace_id.indexOf("]"))),netNsIdSource=netNsResponse.namespace_id.slice(netNsResponse.namespace_id.indexOf("[")+1,netNsResponse.namespace_id.indexOf("]")),urlParams=`container={"netns":${netNsIdSource},"network-interfaces":["${clabSourcePort}"],"name":"${clabSourceLongName.toLocaleLowerCase()}","type":"docker","prefix":""}&nif=${clabSourcePort}`,edgeSharkHref=baseUrl+urlParams,console.log("linkWireshark - edgeSharkHref: ",edgeSharkHref),window.open(edgeSharkHref)):"target"==o&&(baseUrl=`packetflix:ws://${clabServerAddress}:5001/capture?`,netNsResponse=await sendRequestToEndpointGetV3("/clab-node-network-namespace",argsList=[clabTargetLongName]),console.log("linkWireshark - netNsSource: ",netNsResponse.namespace_id.slice(netNsResponse.namespace_id.indexOf("[")+1,netNsResponse.namespace_id.indexOf("]"))),netNsIdTarget=netNsResponse.namespace_id.slice(netNsResponse.namespace_id.indexOf("[")+1,netNsResponse.namespace_id.indexOf("]")),urlParams=`container={"netns":${netNsIdTarget},"network-interfaces":["${clabTargetPort}"],"name":"${clabTargetLongName.toLocaleLowerCase()}","type":"docker","prefix":""}&nif=${clabTargetPort}`,edgeSharkHref=baseUrl+urlParams,console.log("linkWireshark - edgeSharkHref: ",edgeSharkHref),window.open(edgeSharkHref));else if("edgeSharkSubInterface"==n){if("endpoint-a-edgeshark"==a&&(baseUrl=`packetflix:ws://${clabServerAddress}:5001/capture?`,netNsResponse=await sendRequestToEndpointGetV3("/clab-node-network-namespace",argsList=[clabSourceLongName]),console.log("linkWireshark - netNsSource: ",netNsResponse.namespace_id.slice(netNsResponse.namespace_id.indexOf("[")+1,netNsResponse.namespace_id.indexOf("]"))),netNsIdSource=netNsResponse.namespace_id.slice(netNsResponse.namespace_id.indexOf("[")+1,netNsResponse.namespace_id.indexOf("]")),urlParams=`container={"netns":${netNsIdSource},"network-interfaces":["${o}"],"name":"${clabSourceLongName.toLocaleLowerCase()}","type":"docker","prefix":""}&nif=${o}`,edgeSharkHref=baseUrl+urlParams,console.log("linkWireshark - edgeSharkHref: ",edgeSharkHref),window.open(edgeSharkHref)),"endpoint-b-edgeshark"==a&&(console.log("linkWireshark - endpoint-b-edgeshark"),baseUrl=`packetflix:ws://${clabServerAddress}:5001/capture?`,netNsResponse=await sendRequestToEndpointGetV3("/clab-node-network-namespace",argsList=[clabTargetLongName]),console.log("linkWireshark - netNsSource: ",netNsResponse.namespace_id.slice(netNsResponse.namespace_id.indexOf("[")+1,netNsResponse.namespace_id.indexOf("]"))),netNsIdTarget=netNsResponse.namespace_id.slice(netNsResponse.namespace_id.indexOf("[")+1,netNsResponse.namespace_id.indexOf("]")),urlParams=`container={"netns":${netNsIdTarget},"network-interfaces":["${o}"],"name":"${clabSourceLongName.toLocaleLowerCase()}","type":"docker","prefix":""}&nif=${o}`,edgeSharkHref=baseUrl+urlParams,console.log("linkWireshark - edgeSharkHref: ",edgeSharkHref),window.open(edgeSharkHref)),"endpoint-a-clipboard"==a)if(console.log("linkWireshark - endpoint-a-clipboard"),("container"==s||"colocated"==s)&&(wiresharkSshCommand=`ssh ${clabUser}@${clabServerAddress} "sudo -S /sbin/ip netns exec ${clabSourceLongName} tcpdump -U -nni ${o} -w -" | wireshark -k -i -`),navigator.clipboard&&navigator.clipboard.writeText)navigator.clipboard.writeText(wiresharkSshCommand).then((function(){bulmaToast.toast({message:"Hey, now you can paste the link to your terminal console. ðŸ˜Ž",type:"is-warning is-size-6 p-3",duration:4e3,position:"top-center",closeOnClick:!0})})).catch((function(e){console.error("Could not copy text: ",e)}));else{let e=document.createElement("textarea");e.value=wiresharkSshCommand,document.body.appendChild(e),e.focus(),e.select();try{document.execCommand("copy"),bulmaToast.toast({message:"Hey, now you can paste the link to your terminal console. ðŸ˜Ž",type:"is-warning is-size-6 p-3",duration:4e3,position:"top-center",closeOnClick:!0})}catch(e){console.error("Fallback: Oops, unable to copy",e)}document.body.removeChild(e)}if("endpoint-b-clipboard"==a)if(console.log("linkWireshark - endpoint-b-clipboard"),("container"==s||"colocated"==s)&&(wiresharkSshCommand=`ssh ${clabUser}@${clabServerAddress} "sudo -S /sbin/ip netns exec ${clabTargetLongName} tcpdump -U -nni ${o} -w -" | wireshark -k -i -`),navigator.clipboard&&navigator.clipboard.writeText)navigator.clipboard.writeText(wiresharkSshCommand).then((function(){bulmaToast.toast({message:"Hey, now you can paste the link to your terminal console. ðŸ˜Ž",type:"is-warning is-size-6 p-3",duration:4e3,position:"top-center",closeOnClick:!0})})).catch((function(e){console.error("Could not copy text: ",e)}));else{let e=document.createElement("textarea");e.value=wiresharkSshCommand,document.body.appendChild(e),e.focus(),e.select();try{document.execCommand("copy"),bulmaToast.toast({message:"Hey, now you can paste the link to your terminal console. ðŸ˜Ž",type:"is-warning is-size-6 p-3",duration:4e3,position:"top-center",closeOnClick:!0})}catch(e){console.error("Fallback: Oops, unable to copy",e)}document.body.removeChild(e)}}else if("copy"==n)if("source"==o?("container"==s||"colocated"==s)&&(wiresharkSshCommand=`ssh ${clabUser}@${clabServerAddress} "sudo -S /sbin/ip netns exec ${clabSourceLongName} tcpdump -U -nni ${clabSourcePort} -w -" | wireshark -k -i -`):"target"==o&&("container"==s||"colocated"==s)&&(wiresharkSshCommand=`ssh ${clabUser}@${clabServerAddress} "sudo -S /sbin/ip netns exec ${clabTargetLongName} tcpdump -U -nni ${clabTargetPort} -w -" | wireshark -k -i -`),console.log("linkWireshark- wiresharkSShCommand: ",wiresharkSshCommand),navigator.clipboard&&navigator.clipboard.writeText)navigator.clipboard.writeText(wiresharkSshCommand).then((function(){bulmaToast.toast({message:"Hey, now you can paste the link to your terminal console. ðŸ˜Ž",type:"is-warning is-size-6 p-3",duration:4e3,position:"top-center",closeOnClick:!0})})).catch((function(e){console.error("Could not copy text: ",e)}));else{let e=document.createElement("textarea");e.value=wiresharkSshCommand,document.body.appendChild(e),e.focus(),e.select();try{document.execCommand("copy"),bulmaToast.toast({message:"Hey, now you can paste the link to your terminal console. ðŸ˜Ž",type:"is-warning is-size-6 p-3",duration:4e3,position:"top-center",closeOnClick:!0})}catch(e){console.error("Fallback: Oops, unable to copy",e)}document.body.removeChild(e)}}catch(e){console.error("Error executing linkImpairment configuration:",e)}}(e,"edgeSharkSubInterface",o,n)};if(!document.getElementById(r))return void console.error(`Container element with ID "${r}" not found.`);const i=document.getElementById(n),l=document.getElementById(o);if(!i||!l)return void console.error(`Reference elements not found: afterId="${n}", beforeId="${o}".`);let d=i.nextSibling;for(;d&&d!==l;){const e=d.nextSibling;d.remove(),d=e}e?e.forEach((e=>{const n=document.createElement("a");var t,o;n.className="dropdown-item label has-text-weight-normal is-small py-0",n.style.display="flex",n.style.justifyContent="flex-end",n.textContent=`â”” Sub-Interface ${e}`,n.onclick=n=>s(n,e),t=n,(o=i).parentNode.insertBefore(t,o.nextSibling)})):console.log("Sub-interfaces is null. Cleared existing items and performed no further actions.")}function m(e,n,t,o,a){const r=document.getElementById(e);if(!r)return void console.error(`Target node with ID "${e}" not found.`);r.style.display="flex",r.style.alignItems="center";const s=document.createElement("img");if(s.src=n,s.alt=t,s.style.width=a,s.style.height=a,s.style.marginLeft="after"===o?"4px":"0",s.style.marginRight="before"===o?"4px":"0",s.classList.add("gradient-animation"),"after"===o)r.append(s);else{if("before"!==o)return void console.error(`Invalid position "${o}" specified. Use "after" or "before".`);r.prepend(s)}const i=document.createElement("style");i.textContent="\n        @keyframes gradientColorChange {\n            0% { filter: invert(100%); } /* White */\n            20% { filter: invert(85%); } /* Light Grey */\n            40% { filter: invert(60%); } /* Dark Grey */\n            60% { filter: invert(40%); } /* Very Dark Grey */\n            80% { filter: invert(60%); } /* Back to Dark Grey */\n            100% { filter: invert(100%); } /* Back to White */\n        }\n        .gradient-animation {\n            animation: gradientColorChange 3600s infinite;\n        }\n    ",document.head.appendChild(i)}document.addEventListener("DOMContentLoaded",(async function(){function m(e,n){const t="https:"===location.protocol?"wss://":"ws://",o=new WebSocket(t+location.host+e);return o.onopen=()=>{console.log(`Successfully connected WebSocket to ${e}`),o.readyState===WebSocket.OPEN&&o.send(`Hi From the WebSocketClient-${e}`)},o.onclose=n=>{console.log(`Socket to ${e} closed: `,n),o.send("Client Closed!")},o.onerror=n=>{console.log(`Socket to ${e} error: `,n)},o.onmessage=n,o}detectColorScheme(),await async function(){environments=await getEnvironments(),o=await environments["clab-name"],console.log("changeTitle() - labName: ",o),document.title=`TopoViewer::${o}`}(),initializeDropdownTopoViewerRoleListeners(),initializeDropdownListeners(),function(){const e=document.querySelector("#viewport-drawer-clab-editor-content-01 .checkbox-input");e.addEventListener("change",(function(){if(e.checked)return showPanelContainerlabEditor(),isChecked;closePanelContainerlabEditor()}))}(),d("nokia-logo","white");m("/uptime",(async e=>{environments=await getEnvironments(),o=environments["clab-name"],environments.deploymentType,console.log("initializeWebSocket - getEnvironments",environments),console.log("initializeWebSocket - labName",environments["clab-name"]);const n="Containerlab Topology: "+o,t=" ::: Uptime: "+e.data,a=document.getElementById("ClabSubtitle"),r=n+t;a.innerText=r,console.log(a.innerText)})),m("/containerNodeStatus",(n=>{try{const{Names:a,Status:r,State:s}=JSON.parse(n.data);t=a,o=r,e.nodes().forEach((function(n){var a=n.data("id"),r=e.$(`node[name="${a}-statusGreen"]`),s=e.$(`node[name="${a}-statusOrange"]`),l=e.$(`node[name="${a}-statusRed"]`);if(0!==r.length&&0!==l.length){var d=n.position(),c={x:-4,y:-10},p={x:d.x+c.x,y:d.y+c.y},m={x:d.x+c.x,y:d.y+c.y};i?t.includes(a)&&(o.includes("Up")||o.includes("healthy"))?(r.show(),l.hide(),console.log("nodeContainerStatusVisibility: "+i)):t.includes(a)&&o.includes("(health: starting)")?(r.hide(),s.show()):t.includes(a)&&o.includes("Exited")&&(r.hide(),l.show()):(r.hide(),l.hide()),r.position(p),l.position(m)}})),console.log(JSON.parse(n.data));const l=JSON.parse(n.data).Networks.Networks.clab.IPAddress;!function(n,t,o,a,r){e.nodes().forEach((function(e){var s=e.data("id");if(n.includes(s)){var i={state:o,status:t};e.data("containerDockerExtraAttribute",i),e.data("extraData").mgmtIpv4Addresss=a,e.data("extraData").mgmtIpv6Address=r}}))}(a,r,s,l,JSON.parse(n.data).Networks.Networks.clab.GlobalIPv6Address)}catch(e){console.error("Error parsing JSON:",e)}var t,o}));cytoscape.use(cytoscapePopper((function(e,n,t){const o={middleware:[FloatingUIDOM.flip(),FloatingUIDOM.shift({limiter:FloatingUIDOM.limitShift()})],...t};function a(){FloatingUIDOM.computePosition(e,n,o).then((({x:e,y:t})=>{Object.assign(n.style,{left:`${e}px`,top:`${t}px`})}))}return a(),{update:a}}))),(e=cytoscape({container:document.getElementById("cy"),elements:[],style:[{selector:"node",style:{"background-color":"#3498db",label:"data(label)"}}],boxSelectionEnabled:!0,selectionType:"additive"})).on("select","node",(n=>{const t=e.$("node:selected");t.style({"border-width":2,"border-color":"#ff0000"}),console.log("Selected nodes:",t.map((e=>e.id())))})),e.on("unselect","node",(n=>{e.nodes().removeStyle(),y(e),console.log("Remaining selected nodes:",e.$("node:selected").map((e=>e.id())))})),setTimeout((()=>{e.$("#node1, #node2").select(),console.log("Programmatic selection: node1 and node2")}),2e3),e.on("dragfree","node",(n=>{if(l("#viewport-drawer-clab-editor-content-01 .checkbox-input")){const t=n.target,o=e.nodes(":parent");let a=null;o.forEach((e=>{(function(e,n){const t=n.boundingBox(),o=e.position();return o.x>=t.x1&&o.x<=t.x2&&o.y>=t.y1&&o.y<=t.y2})(t,e)&&(a=e)})),a&&(t.move({parent:a.id()}),console.log(`${t.id()} became a child of ${a.id()}`),showPanelNodeEditor(t))}}));const g=e.edgehandles({preview:!1,hoverDelay:50,snap:!1,snapThreshold:10,snapFrequency:150,noEdgeEventsInDraw:!1,disableBrowserGestures:!1,canConnect:function(e,n){return!e.same(n)&&!e.isParent()&&!n.isParent()},edgeParams:function(e,n){return{}}});g.enable();let u=!1;function y(e){e.nodes().removeStyle();const n=detectColorScheme();console.log("The user prefers:",n),("light"==n||"dark"==n)&&fetch("css/cy-style-dark.json").then((e=>e.json())).then((n=>{e.style().fromJson(n).update()})).catch((e=>{console.error("Oops, we hit a snag! Couldnt load the cyto styles, bro.",e),c(`Oops, we hit a snag! Couldnt load the cyto styles, bro.: ${e}`)}))}e.on("ehcomplete",(async(n,t,o,a)=>{console.log(`Edge created from ${t.id()} to ${o.id()}`),console.log("Added edge:",a),setTimeout((()=>{u=!1}),100);const r=a.id();function s(n){const t=e.edges(`[source = "${n}"], [target = "${n}"]`),o=/^e1-(\d+)$/,a=/^eth(\d+)$/;let r=new Set,s=null;t.forEach((e=>{["sourceEndpoint","targetEndpoint"].forEach((t=>{const i=e.data(t),l=e.data("source")===n&&"sourceEndpoint"===t||e.data("target")===n&&"targetEndpoint"===t;if(!i||!l)return;let d=i.match(o);if(d){const e=parseInt(d[1],10);r.add(e),s||(s=o)}else if(d=i.match(a),d){const e=parseInt(d[1],10);r.add(e),s||(s=a)}}))})),s||(s=o);let i=1;for(;r.has(i);)i++;return s===o?`e1-${i}`:`eth${i}`}const i=s(t.id()),l=s(o.id());a.data("sourceEndpoint",i),a.data("targetEndpoint",l),a.data("editor","true"),await showPanelContainerlabEditor(n),await saveEdgeToEditorToFile(r,t,i,o,l)})),y(e),e.gridGuide({snapToGridOnRelease:!0,snapToGridDuringDrag:!1,snapToAlignmentLocationOnRelease:!0,snapToAlignmentLocationDuringDrag:!1,distributionGuidelines:!1,geometricGuideline:!1,initPosAlignment:!1,centerToEdgeAlignment:!1,resize:!1,parentPadding:!1,drawGrid:!1,gridSpacing:10,snapToGridCenter:!0,zoomDash:!0,panGrid:!0,gridStackOrder:-1,gridColor:"#dedede",lineWidth:1,guidelinesStackOrder:4,guidelinesTolerance:2,guidelinesStyle:{strokeStyle:"#8b7d6b",geometricGuidelineRange:400,range:100,minDistRange:10,distGuidelineOffset:10,horizontalDistColor:"#ff0000",verticalDistColor:"#00ff00",initPosAlignmentColor:"#0000ff",lineDash:[0,0],horizontalDistLine:[0,0],verticalDistLine:[0,0],initPosAlignmentLine:[0,0]},parentSpacing:-1}),fetch("dataCytoMarshall.json").then((e=>e.json())).then((n=>{e.add(n);e.layout({name:"cola",nodeGap:5,edgeLength:100,animate:!0,randomize:!1,maxSimulationTime:1500}).run(),topoViewerNode=e.filter('node[name = "topoviewer"]'),topoViewerNode.remove();var t=e.expandCollapse({layoutBy:null,undoable:!1,fisheye:!1,animationDuration:10,animate:!0});setTimeout((function(){var n=e.$("#parent");t.collapse(n),setTimeout((function(){t.expand(n)}),2e3)}),2e3)})).catch((e=>{console.error("Error loading graph data:",e)}));const b=document.createElement("box");b.classList.add("hover-text","is-hidden","box","has-text-weight-normal","is-warning","is-smallest"),b.textContent="Launch CloudShell.",document.body.appendChild(b);let f=!1;document.addEventListener("keydown",(e=>{"Shift"===e.key&&(f=!0)})),document.addEventListener("keyup",(e=>{"Shift"===e.key&&(f=!1)}));let h=!1;document.addEventListener("keydown",(e=>{"Alt"===e.key&&(h=!0)})),document.addEventListener("keyup",(e=>{"Alt"===e.key&&(h=!1)}));let k=!1;document.addEventListener("keydown",(e=>{"Control"===e.key&&(k=!0)})),document.addEventListener("keyup",(e=>{"Control"===e.key&&(k=!1)})),document.getElementById("cy").addEventListener("click",(function(e){if(console.log("cy container clicked"),console.log("isPanel01Cy: ",a),console.log("nodeClicked: ",r),console.log("edgeClicked: ",s),!r&&!s){console.log("!nodeClicked  -- !edgeClicked"),console.log("!isPanel01Cy: ");var n=document.getElementsByClassName("panel-overlay");console.log("panelOverlays: ",n);for(var t=0;t<n.length;t++)console.log,n[t].style.display="none";var o=document.getElementsByClassName("viewport-drawer");for(t=0;t<o.length;t++)o[t].style.display="none";var i=document.getElementsByClassName("ViewPortDrawer");Array.from(i).forEach((function(e){e.style.display="none"}))}r=!1,s=!1,c('"isPanel01Cy-cy: " false'),c(`"nodeClicked: " ${r}`)})),e.on("click",(async n=>{const t=l("#viewport-drawer-clab-editor-content-01 .checkbox-input");if(n.target===e&&f&&t){const t=n.position,a="nodeId-"+(e.nodes().length+1);e.add({group:"nodes",data:{id:a,editor:"true",weight:"30",name:a,parent:"",topoViewerRole:"pe",sourceEndpoint:"",targetEndpoint:"",containerDockerExtraAttribute:{state:"",status:""},extraData:{kind:"container",longname:"",image:"",mgmtIpv4Addresss:""}},position:{x:t.x,y:t.y}});var o=e.$id(a);await showPanelContainerlabEditor(n),await showPanelNodeEditor(o),await saveNodeToEditorToFile()}else y(e)})),e.on("click","node",(async function(e){if(console.log("isEdgeHandlerActive after node click: ",u),environments=await getEnvironments(e),console.log("sshWebBased - environments: ",environments),cytoTopologyJson=environments.EnvCyTopoJsonBytes,clabServerAddress=environments["clab-server-address"],u)return;const t=e.target;if(r=!0,console.log("editor Node: ",t.data("editor")),!t.isParent()){const o=l("#viewport-drawer-clab-editor-content-01 .checkbox-input");if(e.originalEvent.ctrlKey&&t.isChild()&&o&&(console.log(`Orphaning node: ${t.id()} from parent: ${t.parent().id()}`),t.move({parent:null}),console.log(`${t.id()} is now an orphan`)),e.originalEvent.shiftKey&&o&&(console.log("Shift + Click"),console.log("edgeHandler Node: ",t.data("extraData").longname),u=!0,g.start(t),console.log("Node is an editor node"),showPanelNodeEditor(t)),e.originalEvent.altKey&&o&&"true"===t.data("editor")&&(console.log("Alt + Click is enabled"),console.log("deleted Node: ",t.data("extraData").longname),deleteNodeToEditorToFile(t)),"true"===t.data("editor"))showPanelNodeEditor(t);else{const e=document.getElementsByClassName("panel-overlay");for(let n=0;n<e.length;n++)e[n].style.display="none";console.log(t),console.log(t.data("containerDockerExtraAttribute").status),console.log(t.data("extraData")),"none"===document.getElementById("panel-node").style.display?document.getElementById("panel-node").style.display="block":document.getElementById("panel-node").style.display="none",document.getElementById("panel-node-name").textContent=t.data("extraData").longname,document.getElementById("panel-node-status").textContent=t.data("containerDockerExtraAttribute").status,document.getElementById("panel-node-kind").textContent=t.data("extraData").kind,document.getElementById("panel-node-image").textContent=t.data("extraData").image,document.getElementById("panel-node-mgmtipv4").textContent=t.data("extraData").mgmtIpv4Addresss,document.getElementById("panel-node-mgmtipv6").textContent=t.data("extraData").mgmtIpv6Address,document.getElementById("panel-node-fqdn").textContent=t.data("extraData").fqdn,document.getElementById("panel-node-group").textContent=t.data("extraData").group,document.getElementById("panel-node-topoviewerrole").textContent=t.data("topoViewerRole"),n=t.data("extraData").longname,console.log("internal: ",n),c('"isPanel01Cy-cy: " false'),c(`"nodeClicked: " ${r}`)}}})),e.on("click","edge",(async function(n){for(var o=document.getElementsByClassName("panel-overlay"),a=0;a<o.length;a++)o[a].style.display="none";const r=n.target,i="#969799";s=!0,console.log(i),"true"===r.data("editor")?r.style("line-color","#32CD32"):r.style("line-color","#0043BF"),e.edges().forEach((function(e){e!==r&&e.style("line-color",i)})),function(e){if(console.log("assignMiddleLabels"),!e||!e.isEdge())return void console.error("Input is not a valid edge.");const n=e.source().id(),t=e.target().id(),o=e.cy().edges().filter((e=>{const o=e.source().id(),a=e.target().id();return o===n&&a===t||o===t&&a===n}));if(console.log("connectedEdges: ",o),1===o.length)return void o.forEach((e=>e.removeData("edgeGroup")));const a=`${n}-${t}`;if(document.getElementById(`label-${a}`))return void console.log(`Label for group ${a} already exists.`);const r=document.createElement("div");r.classList.add("popper-div"),r.id=`label-${a}`,r.innerHTML='<a href="javascript:void(0);">+</a>',document.body.appendChild(r);const s=e.popper({content:()=>r});function i(){s.update()}function l(){const n=e.cy().zoom(),t=7*n,o=1*n,a=.2*n;r.style.fontSize=`${t}px`,r.style.borderRadius=`${o}px`,r.style.webkitTextStroke=`${a}px white`}l(),i(),e.cy().on("pan zoom resize",(()=>{i(),l()})),e.cy().on("position","node, edge",(()=>{i(),l()})),r.addEventListener("click",(()=>{!function(e,n,t){const o=e.data("source"),a=e.data("target"),r=e.cy().edges().filter((e=>{const n=e.source().id(),t=e.target().id();return n===o&&t===a||n===a&&t===o})),s=r.filter((n=>n.id()!==e.id()&&n.hidden())).length>0;if(s){r.show();const e=document.getElementById(`label-${n}`);e&&e.remove(),console.log(`Expanded parallel edges for ${n}`),bulmaToast.toast({message:`Expanded parallel edges for ${n}`,type:"is-warning is-size-6 p-3",duration:4e3,position:"top-center",closeOnClick:!0})}else{t.forEach((n=>{n.id()!==e.id()&&n.hide()}));const o=document.getElementById(`label-${n}`);o&&(o.innerHTML=`<a href="javascript:void(0);">${t.length}</a>`,o.style.display="block"),console.log(`Collapsed parallel edges for ${n}`),bulmaToast.toast({message:`Collapsed parallel edges for ${n}`,type:"is-warning is-size-6 p-3",duration:4e3,position:"top-center",closeOnClick:!0})}}(e,a,o)})),e.cy().once("click",(()=>{r.remove()}))}(r);const d=l("#viewport-drawer-clab-editor-content-01 .checkbox-input");if(n.originalEvent.altKey&&d&&"true"===r.data("editor")&&(console.log("Alt + Click is enabled"),console.log("deleted Edge: ",r.data("source"),r.data("target")),deleteEdgeToEditorToFile(r)),n.originalEvent.altKey&&d&&"true"!==r.data("editor")&&(console.log("Alt + Click is enabled"),bulmaToast.toast({message:"Hey there, that linkâ€™s locked down read-only, so no deleting it. ðŸ˜ŽðŸ‘Š",type:"is-warning is-size-6 p-3",duration:4e3,position:"top-center",closeOnClick:!0})),"true"!==r.data("editor")){document.getElementById("panel-link").style.display="none","none"===document.getElementById("panel-link").style.display?document.getElementById("panel-link").style.display="block":document.getElementById("panel-link").style.display="none",document.getElementById("panel-link-name").textContent=`${r.data("source")} --- ${r.data("target")}`,document.getElementById("panel-link-endpoint-a-name").textContent=`${r.data("source")} :: ${r.data("sourceEndpoint")}`,document.getElementById("panel-link-endpoint-a-mac-address").textContent="getting the MAC address",document.getElementById("panel-link-endpoint-b-name").textContent=`${r.data("target")} :: ${r.data("targetEndpoint")}`,document.getElementById("panel-link-endpoint-b-mac-address").textContent="getting the MAC address",clabLinkMacArgsList=[`${r.data("extraData").clabSourceLongName}`,`${r.data("extraData").clabTargetLongName}`];const m=await sendRequestToEndpointGetV3("/clab-link-macaddress",clabLinkMacArgsList);console.log("actualLinkMacPair: ",m),sourceClabNode=`${r.data("extraData").clabSourceLongName}`,targetClabNode=`${r.data("extraData").clabTargetLongName}`,sourceIfName=`${r.data("sourceEndpoint")}`,targetIfName=`${r.data("targetEndpoint")}`;const g=u(m.data,sourceClabNode,targetClabNode,sourceIfName,targetIfName);function u(e,n,t,o,a){const r=e.find((e=>e.sourceClabNode===n&&e.targetClabNode===t&&e.sourceIfName===o&&e.targetIfName===a));return r?{sourceIfMac:r.sourceIfMac,targetIfMac:r.targetIfMac}:"No matching data found."}"object"==typeof g?(console.log("Source If MAC:",g.sourceIfMac),console.log("Target If MAC:",g.targetIfMac),document.getElementById("panel-link-endpoint-a-mac-address").textContent=g.sourceIfMac,document.getElementById("panel-link-endpoint-b-mac-address").textContent=g.targetIfMac):(console.log(g),document.getElementById("panel-link-endpoint-a-mac-address").textContent="Oops, no MAC address here!",document.getElementById("panel-link-endpoint-b-mac-address").textContent="Oops, no MAC address here!");let y=[r.data("extraData").clabSourceLongName,r.data("extraData").clabSourcePort],b=await sendRequestToEndpointGetV3("/clab-link-impairment",y);if(b&&"object"==typeof b&&Object.keys(b).length>0){hideLoadingSpinnerGlobal(),console.log("Valid non-empty JSON response received for endpoint A:",b);const E=b.data.delay,C=b.data.jitter,S=b.data.rate,N=b.data.packet_loss,$=b.data.corruption;document.getElementById("panel-link-endpoint-a-delay").value="N/A"===E?"0":E.replace(/ms$/,""),document.getElementById("panel-link-endpoint-a-jitter").value="N/A"===C?"0":C.replace(/ms$/,""),document.getElementById("panel-link-endpoint-a-rate").value="N/A"===S?"0":S,document.getElementById("panel-link-endpoint-a-loss").value="N/A"===N?"0":N.replace(/%$/,""),document.getElementById("panel-link-endpoint-a-corruption").value="N/A"===$?"0":$.replace(/%$/,"")}else console.log("Empty or invalid JSON response received for endpoint A");let f=[r.data("extraData").clabTargetLongName,r.data("extraData").clabTargetPort],h=await sendRequestToEndpointGetV3("/clab-link-impairment",f);if(h&&"object"==typeof h&&Object.keys(h).length>0){hideLoadingSpinnerGlobal(),console.log("Valid non-empty JSON response received for endpoint B:",h);const I=h.data.delay,T=h.data.jitter,L=h.data.rate,D=h.data.packet_loss,B=h.data.corruption;document.getElementById("panel-link-endpoint-b-delay").value="N/A"===I?"0":I.replace(/ms$/,""),document.getElementById("panel-link-endpoint-b-jitter").value="N/A"===T?"0":T.replace(/ms$/,""),document.getElementById("panel-link-endpoint-b-rate").value="N/A"===L?"0":L,document.getElementById("panel-link-endpoint-b-loss").value="N/A"===D?"0":D.replace(/%$/,""),document.getElementById("panel-link-endpoint-b-corruption").value="N/A"===B?"0":B.replace(/%$/,"")}else console.log("Empty or invalid JSON response received for endpoint B");let k=[r.data("extraData").clabSourceLongName,r.data("extraData").clabSourcePort],v=await sendRequestToEndpointGetV3("/clab-link-subinterfaces",k);if(console.log("clabSourceSubInterfacesClabData: ",v),Array.isArray(v)&&v.length>0){const A=v.map((e=>`${e.ifname}`));p(A,"endpoint-a-edgeshark","endpoint-a-clipboard"),p(A,"endpoint-a-clipboard","endpoint-a-bottom")}else Array.isArray(v)?(console.log("No sub-interfaces found. The input data array is empty."),p(null,"endpoint-a-edgeshark","endpoint-a-clipboard"),p(null,"endpoint-a-clipboard","endpoint-a-bottom")):(console.log("No sub-interfaces found. The input data is null, undefined, or not an array."),p(null,"endpoint-a-edgeshark","endpoint-a-clipboard"),p(null,"endpoint-a-clipboard","endpoint-a-bottom"));let w=[r.data("extraData").clabTargetLongName,r.data("extraData").clabTargetPort],x=await sendRequestToEndpointGetV3("/clab-link-subinterfaces",w);if(console.log("clabTargetSubInterfacesClabData: ",x),Array.isArray(x)&&x.length>0){const O=x.map((e=>`${e.ifname}`));p(O,"endpoint-b-edgeshark","endpoint-b-clipboard"),p(O,"endpoint-b-clipboard","endpoint-b-bottom")}else Array.isArray(x)?(console.log("No sub-interfaces found. The input data array is empty."),p(null,"endpoint-b-edgeshark","endpoint-b-clipboard"),p(null,"endpoint-b-clipboard","endpoint-b-bottom")):(console.log("No sub-interfaces found. The input data is null, undefined, or not an array."),p(null,"endpoint-b-edgeshark","endpoint-b-clipboard"),p(null,"endpoint-b-clipboard","endpoint-b-bottom"));t=r.data("id"),c(`"edgeClicked: " ${s}`)}}));const v=document.getElementById("copyToClipboardButton");v.className="button is-smallest-element",v.addEventListener("click",(function(){document.getElementById("notificationTextarea").select(),document.execCommand("copy")}))})),document.getElementById("panel-log-messages-close-button").addEventListener("click",(()=>{document.getElementById("panel-log-messages").style.display="none"})),document.addEventListener("DOMContentLoaded",(()=>{d("nokia-logo","white")})),m("endpoint-a-edgeshark","images/svg-wireshark.svg","Wireshark Icon","before","20px"),m("endpoint-b-edgeshark","images/svg-wireshark.svg","Wireshark Icon","before","20px"),m("endpoint-a-clipboard","images/svg-copy.svg","Clipboard Icon","before","20px"),m("endpoint-b-clipboard","images/svg-copy.svg","Clipboard Icon","before","20px"),m("panel-link-action-impairment-B->A","images/svg-impairment.svg","Impairment Icon","before","15px");